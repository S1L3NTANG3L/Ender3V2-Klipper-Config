[include mainsail.cfg]

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[mcu EBBCan]
serial: /dev/serial/by-id/usb-Klipper_stm32g0b1xx_1D0049001250425539393020-if00
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]

[respond]
default_type: command

#Ender MCU
[stepper_x]
step_pin: PC2
dir_pin: PB9
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA5
position_endstop: 0
position_max: 245
homing_speed: 50

[stepper_y]
step_pin: PB8
dir_pin: PB7
enable_pin: !PC3
microsteps: 16
rotation_distance: 40
endstop_pin: ^PA6
position_endstop: -10
position_max: 235
position_min: -10
homing_speed: 50

[stepper_z]
step_pin: PB6
dir_pin: !PB5
enable_pin: !PC3
microsteps: 16
rotation_distance: 8
endstop_pin: ^PA7
position_endstop: -4.2
position_max: 250
position_min: -4.2


[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
# tuned for stock hardware with 50 degree Celsius target
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[temperature_sensor Pi]
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp
min_temp: 0
max_temp: 100

[temperature_sensor Ender]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 0
max_temp: 100

[temperature_sensor EBBCan]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

[filament_switch_sensor BTTSFS]
pause_on_runout: True
switch_pin: EBBCan: PB6

[adxl345 hotend]
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: x,y,z

#[resonance_tester]
#accel_chip_x: adxl345 hotend
#probe_points:
#    100, 100, 20

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 3.489640131
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
pressure_advance = 0.058
min_temp: 0
max_temp: 350
sensor_type: MAX31865
sensor_pin: EBBCan: PA4
spi_bus: spi1
rtd_nominal_r: 100
rtd_reference_r: 430
rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.650
stealthchop_threshold: 999999

[fan]
pin: EBBCan: PA1

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
heater_temp: 50.0

[probe]
pin: ^EBBCan: PB8 #Probe-Stop Connection on Skr Mini E3 DIP. Change this if needed!
#z_offset: 5.968 #Measure per your specific setup
x_offset: 6 # negative = left of the nozzle
y_offset: 35 # negative = in front of of the nozzle
speed: 5.0
lift_speed: 15.0
sample_retract_dist: 1
samples: 2
samples_tolerance_retries: 6
##[(7x7)-1] / 2 = 24
##[(5x5)-1] / 2 = 12
[bed_mesh]
speed: 300
horizontal_move_z: 6
mesh_min: 8,30
mesh_max: 223,201
probe_count: 7,7
relative_reference_index: 12
algorithm: bicubic
fade_start: 1
fade_end: 10
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
split_delta_z: 0.015
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
move_check_distance: 3
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 4,4
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.

#Gcode Macros
[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    G91
    G92 E0
    G1 E25 F{speed} # purge
    G1 E-420 F{max_velocity}
    M300
    M300

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    G91
    G92 E0
    G1 E350 F{max_velocity}
    G1 E25 F{speed} #purge
    M300
    M300

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 5.0) %}
      {% set z_safe = 5.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: "Cancel the running print"
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  M220 S100 ;Reset Speed factor override percentage to default (100%)
  M221 S100 ;Reset Extrude factor override percentage to default (100%)
  SAFE_RETRACT
  SAFE_PARK
  M106 S0 ;disable fan
  CANCEL_PRINT_BASE

[gcode_macro M600]
gcode:
  CHANGE_FILAMENT 
  
[gcode_macro CHANGE_FILAMENT]
gcode:
  M117 Change Filament
  PAUSE
  M117

[gcode_macro PROBE_OUT]
gcode:
    G90
    G1 Z6.5
    G1 X245 F20000
    G1 Z0
    G4 P300
    G1 Z20
    G1 X0

[gcode_macro PROBE_IN]
gcode:
    G90
    G1 Z20
    G1 X245 F20000
    G1 Z0
    G4 P300
    G1 X235 F1000
    G1 Z5
    G4 P300
    G1 X0 F20000
    G1 Z0

[gcode_macro AUTO_BED_MESH]
gcode:
    G28
    PROBE_OUT
    BED_MESH_CALIBRATE
    G1 Y0 F20000
    PROBE_IN

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.183750, -0.015000, 0.093750, 0.223750, 0.326250, 0.457500, 0.565000
#*# 	  -0.166250, 0.000000, 0.121250, 0.232500, 0.350000, 0.480000, 0.576250
#*# 	  -0.168750, 0.008750, 0.132500, 0.260000, 0.376250, 0.503750, 0.608750
#*# 	  -0.140000, 0.016250, 0.131250, 0.255000, 0.358750, 0.482500, 0.581250
#*# 	  -0.193750, -0.015000, 0.126250, 0.263750, 0.396250, 0.542500, 0.653750
#*# 	  -0.177500, -0.001250, 0.128750, 0.260000, 0.378750, 0.520000, 0.625000
#*# 	  -0.207500, -0.022500, 0.116250, 0.261250, 0.405000, 0.553750, 0.680000
#*# tension = 0.2
#*# min_x = 8.0
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 4
#*# min_y = 30.0
#*# x_count = 7
#*# max_y = 201.0
#*# mesh_x_pps = 4
#*# max_x = 222.97
#*#
#*# [probe]
#*# z_offset = 0.000
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 13.180
#*# pid_ki = 0.379
#*# pid_kd = 114.673
